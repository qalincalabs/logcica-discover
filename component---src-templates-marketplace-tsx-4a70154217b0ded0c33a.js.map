{"version":3,"file":"component---src-templates-marketplace-tsx-4a70154217b0ded0c33a.js","mappings":"sTAIA,GAAe,EAAAA,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,+JACD,SCDJ,GAAe,EAAAD,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,wJACD,YCaJ,MAAMC,EAAa,CAEjBC,WAAY,4CAGRC,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVC,YAAa,CACXC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,SAKK,SAASC,EAAmBC,GAAgB,IAAAC,EAAA,IAAf,KAAEC,GAAWF,EACvD,MAAMG,EAAcD,EAAKC,YACnBC,EAASF,EAAKE,OAAOC,MAAMC,MAAK,CAACC,EAAQC,IAC7CD,EAAEE,KAAKC,cAAcF,EAAEC,QAEnBE,EAAiD,QAAvBV,EAAGE,EAAYS,gBAAQ,IAAAX,OAAA,EAApBA,EAAsBY,MAAMC,GAAqB,YAAVA,EAAEC,OAE5E,OACEC,EAAAA,cAAA,QAAMC,MAAOhC,GACX+B,EAAAA,cAACE,EAAAA,EAAa,CAAC/B,MAAOA,GACpB6B,EAAAA,cAACG,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,IACnBL,EAAAA,cAACM,EAAAA,EAAS,MACVN,EAAAA,cAACO,EAAAA,EAAO,MACRP,EAAAA,cAACG,EAAAA,EAAG,KACFH,EAAAA,cAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,QAAQ,KAAKC,UAAU,MAC/CxB,EAAYM,MAEfO,EAAAA,cAACY,EAAAA,EAAK,CAACF,QAAQ,WAAWN,GAAI,CAAEN,EAAG,EAAGe,EAAG,IACtC1B,EAAY2B,uBACXd,EAAAA,cAACe,EAAAA,EAAK,CAACC,UAAU,MAAMC,IAAK,EAAGZ,SAAU,GACvCL,EAAAA,cAACkB,EAAAA,EAAa,MACdlB,EAAAA,cAACQ,EAAAA,EAAU,KACRrB,EAAY2B,sBAAsBK,MAAMC,WAI9CjC,EAAYkC,OACXrB,EAAAA,cAACe,EAAAA,EAAK,CAACC,UAAU,MAAMC,IAAK,EAAGZ,SAAU,GACvCL,EAAAA,cAACsB,EAAK,MACNtB,EAAAA,cAACQ,EAAAA,EAAU,KACRrB,EAAYkC,MAAME,QAAQC,OAAO,KAAG,IACpCrC,EAAYkC,MAAME,QAAQE,WAIhC9B,GACCK,EAAAA,cAAA,KACE0B,KACE,4BAA8B/B,EAA2BgC,KAG3D3B,EAAAA,cAAC4B,EAAAA,EAAM,CAACC,UAAW7B,EAAAA,cAAC8B,EAAQ,OACzBnC,EAA2BgC,OAKpC3B,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,MAAK,eAGxCX,EAAAA,cAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACtB7C,EAAO8C,KAAKC,GACXnC,EAAAA,cAAC+B,EAAAA,GAAI,CAACK,MAAI,EAAC1D,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGE,GAAI,GACnCkB,EAAAA,cAACY,EAAAA,EAAK,CAACR,GAAI,CAAEN,EAAG,IACdE,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,MACjByB,EAAME,MAAMC,SAAS7C,MAExBO,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,aACjByB,EAAME,MAAMC,SAASjB,MAAM5B,MAE9BO,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,SACjByB,EAAMI,QAAQC,YAAYrB,MAAMC,kBAWvD,C","sources":["webpack://logcica-discover/./node_modules/@mui/icons-material/esm/Place.js","webpack://logcica-discover/./node_modules/@mui/icons-material/esm/Facebook.js","webpack://logcica-discover/./src/templates/marketplace.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Place');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport AppTopBar from \"../components/app-top-bar\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  Stack,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\nimport { CalendarMonth, Facebook, Place } from \"@mui/icons-material\";\nimport Markdown from \"markdown-to-jsx\";\n\nconst pageStyles = {\n  // color: \"black\",\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ffcb01\",\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1440, // changed from 1536 to fit mac book pro\n    },\n  },\n});\n\nexport default function MarketplaceTemplate({ data }: any) {\n  const marketplace = data.marketplace;\n  const stalls = data.stalls.nodes.sort((a: any, b: any) =>\n    a.name.localeCompare(b.name)\n  );\n  const marketplaceFacebookProfile = marketplace.profiles?.find((p: any) => p.type == \"facebook\")\n  \n  return (\n    <main style={pageStyles}>\n      <ThemeProvider theme={theme}>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppTopBar />\n          <Toolbar />\n          <Box>\n            <Typography align=\"center\" variant=\"h3\" component=\"h3\">\n              {marketplace.name}\n            </Typography>\n            <Paper variant=\"outlined\" sx={{ p: 1, m: 1 }}>\n              {marketplace.availabilityStatement && (\n                <Stack direction=\"row\" gap={1} flexGrow={1}>\n                  <CalendarMonth />\n                  <Typography>\n                    {marketplace.availabilityStatement.short.markdown}\n                  </Typography>\n                </Stack>\n              )}\n              {marketplace.place && (\n                <Stack direction=\"row\" gap={1} flexGrow={1}>\n                  <Place />\n                  <Typography>\n                    {marketplace.place.address.street} Ã {\" \"}\n                    {marketplace.place.address.locality}\n                  </Typography>\n                </Stack>\n              )}\n              {marketplaceFacebookProfile && (\n                <a\n                  href={\n                    \"https://www.facebook.com/\" + marketplaceFacebookProfile.key\n                  }\n                >\n                  <Button startIcon={<Facebook />}>\n                    {marketplaceFacebookProfile.key}\n                  </Button>\n                </a>\n              )}\n            </Paper>\n            <Typography variant=\"h4\" component=\"h4\">\n              Producteurs\n            </Typography>\n            <Grid container spacing={2}>\n              {stalls.map((stall: any) => (\n                <Grid item xs={12} sm={6} md={4} xl={3}>\n                  <Paper sx={{ p: 1 }}>\n                    <Typography variant=\"h6\">\n                      {stall.owner.activity.name}\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                      {stall.owner.activity.place.name}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {stall.catalog.description.short.markdown}\n                    </Typography>\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        </Box>\n      </ThemeProvider>\n    </main>\n  );\n}\n\nexport const query = graphql`\n  query ($id: String!) {\n    marketplace: mongodbCounter(_id: { eq: $id }) {\n      _id\n      name\n      place {\n        address {\n          street\n          locality\n        }\n      }\n      availabilityStatement {\n        short {\n          markdown\n        }\n      }\n      profiles {\n        key\n        type\n      }\n    }\n    stalls: allMongodbCounter(filter: { marketplace: { eq: $id } }) {\n      nodes {\n        _id\n        name\n        catalog {\n          description {\n            short {\n              markdown\n            }\n          }\n        }\n        owner {\n          activity {\n            name\n            place {\n              _id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/*\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n*/\n"],"names":["createSvgIcon","d","pageStyles","fontFamily","theme","createTheme","palette","primary","main","breakpoints","values","xs","sm","md","lg","xl","MarketplaceTemplate","_ref","_marketplace$profiles","data","marketplace","stalls","nodes","sort","a","b","name","localeCompare","marketplaceFacebookProfile","profiles","find","p","type","React","style","ThemeProvider","Box","sx","flexGrow","AppTopBar","Toolbar","Typography","align","variant","component","Paper","m","availabilityStatement","Stack","direction","gap","CalendarMonth","short","markdown","place","Place","address","street","locality","href","key","Button","startIcon","Facebook","Grid","container","spacing","map","stall","item","owner","activity","catalog","description"],"sourceRoot":""}