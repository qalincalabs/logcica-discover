{"version":3,"file":"component---src-templates-marketplace-tsx-f8fe226540a061cf13b9.js","mappings":"oQAgBA,MAAMA,EAAa,CAEjBC,WAAY,4CAGRC,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,YAGVC,YAAa,CACXC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,SAKK,SAASC,EAAmBC,GAAgB,IAAf,KAAEC,GAAWD,EACvD,MAAME,EAAcD,EAAKC,YACnBC,EAASF,EAAKE,OAAOC,MAAMC,MAAK,CAACC,EAAMC,IAAQD,EAAEE,KAAKC,cAAcF,EAAEC,QAC5E,OACEE,EAAAA,cAAA,QAAMC,MAAO1B,GACXyB,EAAAA,cAACE,EAAAA,EAAa,CAACzB,MAAOA,GACpBuB,EAAAA,cAACG,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,IACnBL,EAAAA,cAACM,EAAAA,EAAS,MACVN,EAAAA,cAACO,EAAAA,EAAO,MACRP,EAAAA,cAACG,EAAAA,EAAG,KACFH,EAAAA,cAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,QAAQ,KAAKC,UAAU,MAC/CnB,EAAYM,MAEfE,EAAAA,cAACY,EAAAA,EAAK,CAACF,QAAQ,WAAWN,GAAI,CAAES,EAAG,EAAGC,EAAG,IACvCd,EAAAA,cAACQ,EAAAA,EAAU,KAAC,YACAhB,EAAYuB,MAAMC,QAAQC,OAAO,KAAG,IAC7CzB,EAAYuB,MAAMC,QAAQE,WAG/BlB,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,KAAKC,UAAU,MAAK,eAGxCX,EAAAA,cAACmB,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACtB5B,EAAO6B,KAAKC,GACXvB,EAAAA,cAACmB,EAAAA,GAAI,CAACK,MAAI,EAACxC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGE,GAAI,GACrCY,EAAAA,cAACY,EAAAA,EAAK,CAACR,GAAI,CAAES,EAAG,IACdb,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,MACjBa,EAAME,MAAMC,SAAS5B,MAExBE,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,aACjBa,EAAME,MAAMC,SAASX,MAAMjB,MAE9BE,EAAAA,cAACQ,EAAAA,EAAU,CAACE,QAAQ,SACjBa,EAAMI,QAAQC,YAAYC,MAAMC,kBAWrD,C","sources":["webpack://logcica-discover/./src/templates/marketplace.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport AppTopBar from \"../components/app-top-bar\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  Paper,\n  ThemeProvider,\n  Toolbar,\n  Typography,\n  createTheme,\n} from \"@mui/material\";\n\nconst pageStyles = {\n  // color: \"black\",\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ffcb01\",\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1440, // changed from 1536 to fit mac book pro\n    },\n  },\n});\n\nexport default function MarketplaceTemplate({ data }: any) {\n  const marketplace = data.marketplace;\n  const stalls = data.stalls.nodes.sort((a:any,b:any)=>a.name.localeCompare(b.name));\n  return (\n    <main style={pageStyles}>\n      <ThemeProvider theme={theme}>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppTopBar />\n          <Toolbar />\n          <Box>\n            <Typography align=\"center\" variant=\"h2\" component=\"h2\">\n              {marketplace.name}\n            </Typography>\n            <Paper variant=\"outlined\" sx={{ p: 1, m: 1 }}>\n              <Typography>\n                Adresse: {marketplace.place.address.street} Ã {\" \"}\n                {marketplace.place.address.locality}\n              </Typography>\n            </Paper>\n            <Typography variant=\"h3\" component=\"h3\">\n              Producteurs\n            </Typography>\n            <Grid container spacing={2}>\n              {stalls.map((stall: any) => (\n                <Grid item xs={12} sm={6} md={4} xl={3}>\n                <Paper sx={{ p: 1}}>\n                  <Typography variant=\"h6\">\n                    {stall.owner.activity.name}\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    {stall.owner.activity.place.name}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {stall.catalog.description.short.markdown}\n                  </Typography>\n                </Paper>\n                </Grid>\n              ))}\n              </Grid>\n          </Box>\n        </Box>\n      </ThemeProvider>\n    </main>\n  );\n}\n\nexport const query = graphql`\n  query ($id: String!) {\n    marketplace: mongodbCounter(_id: { eq: $id }) {\n      _id\n      name\n      place {\n        address {\n          street\n          locality\n        }\n      }\n    }\n    stalls: allMongodbCounter(filter: { marketplace: { eq: $id } }) {\n      nodes {\n        _id\n        name\n        catalog {\n          description {\n            short {\n              markdown\n            }\n          }\n        }\n        owner {\n          activity {\n            name\n            place {\n              _id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/*\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n*/\n"],"names":["pageStyles","fontFamily","theme","createTheme","palette","primary","main","breakpoints","values","xs","sm","md","lg","xl","MarketplaceTemplate","_ref","data","marketplace","stalls","nodes","sort","a","b","name","localeCompare","React","style","ThemeProvider","Box","sx","flexGrow","AppTopBar","Toolbar","Typography","align","variant","component","Paper","p","m","place","address","street","locality","Grid","container","spacing","map","stall","item","owner","activity","catalog","description","short","markdown"],"sourceRoot":""}